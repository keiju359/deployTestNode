{
  "name": "sshconf",
  "description": "Read and write to a ssh config file.",
  "tags": [
    "ssh",
    "keys",
    "security"
  ],
  "version": "0.0.2",
  "author": {
    "name": "Paolo Fragomeni",
    "email": "paolo@nodejisu.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/hij1nx/sshconf.git"
  },
  "dependencies": {
    "optimist": "*"
  },
  "devDependencies": {
    "tap": "*",
    "seq": "*"
  },
  "bugs": {
    "url": "http://github.com/hij1nx/sshconf/issues"
  },
  "bin": {
    "sshconf": "./bin/sshconf"
  },
  "engines": [
    "node >= 0.9.x"
  ],
  "main": "./sshconf",
  "scripts": {
    "test": "node test/tests.js"
  },
  "readme": "# Synopsis\nA module for reading from and writing to a ssh config file with Node.js\n\n# Example\n\n```js\nvar sshconf = require('sshconf');\nvar argv = require('optimist').argv;\n\nvar path = argv.p || argv.path;\n\nif (path) {\n  sshconf.path(path);\n}\n\nsshconf.read(function(err, allhosts) {\n  var host = argv.h || argv.host;\n\n  if (host && argv.key && argv.value) {\n    sshconf.value(host, argv.key, argv.value);\n    sshconf.write(function(err) {\n      if (err) {\n        console.log(err);\n      }\n      else {\n        console.log('Wrote the value `' + argv.value + '` to the `' + \n          argv.key + '` for the host named `' + host + '`');\n      }\n    });\n  }\n  else if (host && argv.value) {\n    console.log(sshconf.value(host, argv.value));\n  }\n  else if (host) {\n    console.log(sshconf.value(host));\n  }\n  else {\n    console.log(sshconf.value());\n  }\n});\n```\n\n# API\n\n## path([path])\nGet or set the path to the ssh config file. The `path` option is optional and defaults to `~/.ssh/config`.\n\n## read(err, hosts)\nReturns all of the hosts entries from the ssh config file.\n\n## value([host], [key], [value])\nGets or sets a value for the current configuration file.\n\n- When no parameters are provided, all hosts and their values are returned. \n- When only a `host` is provided, the keys and values for that host are returned. \n- When a `host` and `key` are supplied, the value for that key will be returned. \n- Finally, when a `host`, `key` and `value` are supplied, the value will overwrite at which time `write` may be called.\n\n## write(callback)\nWrite any new values to the file system.\n",
  "readmeFilename": "README.md",
  "_id": "sshconf@0.0.2",
  "dist": {
    "shasum": "7ce93d1422ea0b88adffa26d1d43cb27729be0b8"
  },
  "_from": "sshconf@0.x.x",
  "_resolved": "https://registry.npmjs.org/sshconf/-/sshconf-0.0.2.tgz"
}
